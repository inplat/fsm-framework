// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	queue "fsm-framework/fsm-engine/queue"
)

// QueueChannelMock is an autogenerated mock type for the QueueChannelMock type
type QueueChannelMock struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *QueueChannelMock) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Consume provides a mock function with given fields: ctx, _a1, handler
func (_m *QueueChannelMock) Consume(ctx context.Context, _a1 string, handler queue.Handler) error {
	ret := _m.Called(ctx, _a1, handler)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, queue.Handler) error); ok {
		r0 = rf(ctx, _a1, handler)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeclareQueue provides a mock function with given fields: name
func (_m *QueueChannelMock) DeclareQueue(name string) error {
	ret := _m.Called(name)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Publish provides a mock function with given fields: ctx, _a1, body
func (_m *QueueChannelMock) Publish(ctx context.Context, _a1 string, body []byte) {
	_m.Called(ctx, _a1, body)
}
